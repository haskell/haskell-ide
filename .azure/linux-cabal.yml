jobs:
- job: Linux_Stack
  timeoutInMinutes: 0
  pool:
    vmImage: ubuntu-16.04
  strategy:
    matrix:
      ghc-8.6.5:
        GHC_VERSION: "8.6.5"
      ghc-8.4.4:
        GHC_VERSION: "8.4.4"
  variables:
    CABAL_VERSION: "3.0"
    INDEX_STATE: "2020-01-07T22:09:46Z"
  steps:
  - task: CacheBeta@0
    inputs:
      key: "cabal-store" | "$(Agent.OS)" | "$(CABAL_VERSION)" | "$(GHC_VERSION)" | $(Build.SourcesDirectory)/cabal.project | $(Build.SourcesDirectory)/haskell-ide-engine.cabal | $(Build.SourcesDirectory)/hie-plugin-api/hie-plugin-api.cabal
      path: .azure-cache
      cacheHitVar: CACHE_RESTORED
    displayName: "Download cache"
  - bash: |
      mkdir -p $HOME/.cabal
      tar -xzf .azure-cache/cabal-root.tar.gz -C /
      mkdir -p $HOME/.ghc
      tar -xzf .azure-cache/ghc-root.tar.gz -C /
      mkdir -p dist-newtyle
      tar -xzf .azure-cache/cabal-dist.tar.gz
    displayName: "Unpack cache"
    condition: eq(variables.CACHE_RESTORED, 'true')
  - bash: |
      git submodule sync
      git submodule update --init
    displayName: Sync submodules
  - bash: |
      source .azure/linux.bashrc
      cabal v2-build -w $(GHC_VERSION) --only-configure
    displayName: Build dependencies
  - bash: |
      source .azure/linux.bashrc
      cabal v2-build -w $(GHC_VERSION)
    displayName: Build `hie`
  - bash: |
      source .azure/linux.bashrc
      cabal v2-install -w $(GHC_VERSION) --ovewrite-policy always --install-method copy # `hie` binary required locally for tests
    displayName: Install `hie` 
  - bash: |
      source .azure/linux.bashrc
      cabal v2-build -w $(GHC_VERSION) --enable-tests --enable-benchmarks --only-configure
    displayName: Build Test-dependencies
  - bash: |
      sudo apt update
      sudo apt install z3
    displayName: "Install Runtime Test-Dependencies: z3"
  - bash: |
      source .azure/linux.bashrc
      cabal v2-install liquidhaskell-0.8.2.4 -w $(GHC_VERSION) --ovewrite-policy always --install-method copy
    displayName: "Install Runtime Test-Dependencies: liquidhaskell"
  - bash: |
      source .azure/linux.bashrc
      cabal test -w $(GHC_VERSION)
    displayName: Run Test
  - bash: |
      mkdir -p .azure-cache
      tar -vczf .azure-cache/cabal-root.tar.gz $HOME/.cabal
      tar -vczf .azure-cache/ghc-root.tar.gz $HOME/.ghc
      tar -vczf .azure-cache/cabal-dist.tar.gz dist-newstyle
    displayName: "Pack cache"